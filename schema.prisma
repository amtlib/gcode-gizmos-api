// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                     String         @id @default(cuid())
  name                   String         @default("")
  email                  String         @unique @default("")
  password               String
  firstName              String         @default("")
  lastName               String         @default("")
  createdTasks           Task[]         @relation("Task_createdBy")
  assignedTasks          Task[]         @relation("Task_assignedUser")
  from_AssigneeUser_user AssigneeUser[] @relation("AssigneeUser_user")
}

model AssigneeUser {
  id        String   @id @default(cuid())
  project   Project? @relation("AssigneeUser_project", fields: [projectId], references: [id])
  projectId String?  @map("project")
  user      User?    @relation("AssigneeUser_user", fields: [userId], references: [id])
  userId    String?  @map("user")
  role      String?

  @@index([projectId])
  @@index([userId])
}

model Project {
  id                        String         @id @default(cuid())
  title                     String         @default("")
  description               String         @default("")
  tasks                     Task[]         @relation("Task_project")
  from_AssigneeUser_project AssigneeUser[] @relation("AssigneeUser_project")
}

model Task {
  id                   String    @id @default(cuid())
  project              Project?  @relation("Task_project", fields: [projectId], references: [id])
  projectId            String?   @map("project")
  createdBy            User?     @relation("Task_createdBy", fields: [createdById], references: [id])
  createdById          String?   @map("createdBy")
  assignedUser         User?     @relation("Task_assignedUser", fields: [assignedUserId], references: [id])
  assignedUserId       String?   @map("assignedUser")
  dueDate              DateTime?
  estimatedTime        Int?
  priority             String?
  name                 String    @default("")
  description          String    @default("")
  status               String?   @default("backlog")
  parentTask           Task?     @relation("Task_parentTask", fields: [parentTaskId], references: [id])
  parentTaskId         String?   @map("parentTask")
  from_Task_parentTask Task[]    @relation("Task_parentTask")

  @@index([projectId])
  @@index([createdById])
  @@index([assignedUserId])
  @@index([parentTaskId])
}
